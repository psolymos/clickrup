[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Peter Solymos. Author, maintainer. Kirill Müller. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Solymos P, Müller K (2024). clickrup: Interacting ClickUp v2 API R. R package version 0.0.6, https://github.com/psolymos/clickrup.","code":"@Manual{,   title = {clickrup: Interacting with the ClickUp v2 API from R},   author = {Peter Solymos and Kirill Müller},   year = {2024},   note = {R package version 0.0.6},   url = {https://github.com/psolymos/clickrup}, }"},{"path":"/index.html","id":"clickrup-","dir":"","previous_headings":"","what":"Interacting with the ClickUp v2 API from R","title":"Interacting with the ClickUp v2 API from R","text":"Interacting ClickUp v2 API R ClickUp cloud-based collaboration project management tool. Features include tasks, docs, chat, goals, . {clickrup} R package wraps ClickUp API v2. See roadmap currently included package.","code":""},{"path":"/index.html","id":"setup","dir":"","previous_headings":"","what":"Setup","title":"Interacting with the ClickUp v2 API from R","text":"Install {clickrup} package: Follow tutorial: sign ClickUp (can use referral link , ’s free), navigate personal Settings, click Apps left sidebar, click Generate create API token, click Copy copy token clipboard. Now add ClickUp token environment variable: open file .Renviron: file.edit(\"~/.Renviron\"), add line CU_PAT=\"your_token\" .Renviron file save , check Sys.getenv(\"CU_PAT\"), return token. ClickUp token look something like pk_4753994_EXP7MPOJ7XQM5UJDV2M45MPF0YHH5YHO. cu_set_pat function uses Sys.setenv set CU_PAT environment variable processes called within R future calls Sys.getenv R process.","code":"## using remotes remotes::install_github(\"psolymos/clickrup\")  ## with r-universe options(repos = c(     psolymos = \"https://psolymos.r-universe.dev\",     CRAN = \"https://cloud.r-project.org\")) install.packages('clickrup')"},{"path":"/index.html","id":"api-endpoints","dir":"","previous_headings":"","what":"API endpoints","title":"Interacting with the ClickUp v2 API from R","text":"first step want get IDs workspaces (teams legacy term API). setup successful, cu_get_teams() return list workspace IDs names. easiest way get going various endpoints browse API v2 documentation. found , just look API heading. example, Get Teams, R function prepended cu_ (facilitate RStudio code completion), comes heading lower case spaces replaced underscores. Similarly, Get Filtered Team Tasks cu_get_filtered_team_tasks(). Articles (, , ) dropped (e.g. Create Time Entry) cu_create_time_entry(). Function arguments Parameters listed API page, ... passes optional parameters, query parameters, elements body.","code":""},{"path":"/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Interacting with the ClickUp v2 API from R","text":"Load package set access token already set. cu_get_pat() returns token invisibly, doesn’t end logs.","code":"library(clickrup) #> clickrup 0.0.5    2021-12-12 cu_get_pat() # returns PAT invisibly"},{"path":"/index.html","id":"clickup-hierarchy","dir":"","previous_headings":"Examples","what":"ClickUp hierarchy","title":"Interacting with the ClickUp v2 API from R","text":"ClickUp hierarchy includes following levels: Workspaces (teams legacy term API) Spaces Folders Lists Tasks Subtasks Checklists can list Workspaces access using cu_get_teams() function. takes arguments, passes access token behind scenes, good way test things working expected Spaces within specific Workspace defined team_id Folders within specific Space defined space_id Lists within specific Folder defined folder_id (Folderless Lists based space_id) functions cu_get_spaces, cu_get_folders, cu_get_lists accept argument archived return archived spaces/folders/lists","code":"Teams <- cu_get_teams() str(Teams, 3) #> List of 1 #>  $ teams:List of 2 #>   ..$ :List of 5 #>   .. ..$ id     : chr \"2253762\" #>   .. ..$ name   : chr \"Peter's Workspace\" #>   .. ..$ color  : chr \"#40BC86\" #>   .. ..$ avatar : NULL #>   .. ..$ members:List of 1 #>   ..$ :List of 5 #>   .. ..$ id     : chr \"2399763\" #>   .. ..$ name   : chr \"My Workspace\" #>   .. ..$ color  : chr \"#ea80fc\" #>   .. ..$ avatar : NULL #>   .. ..$ members:List of 1 team_id <- Teams$teams[[2]]$id Spaces <- cu_get_spaces(team_id) str(Spaces, 3) #> List of 1 #>  $ spaces:List of 2 #>   ..$ :List of 7 #>   .. ..$ id                : chr \"6331651\" #>   .. ..$ name              : chr \"Extras\" #>   .. ..$ private           : logi FALSE #>   .. ..$ statuses          :List of 4 #>   .. ..$ multiple_assignees: logi TRUE #>   .. ..$ features          :List of 14 #>   .. ..$ archived          : logi FALSE #>   ..$ :List of 7 #>   .. ..$ id                : chr \"6331576\" #>   .. ..$ name              : chr \"Bugs\" #>   .. ..$ private           : logi FALSE #>   .. ..$ statuses          :List of 2 #>   .. ..$ multiple_assignees: logi FALSE #>   .. ..$ features          :List of 11 #>   .. ..$ archived          : logi FALSE space_id <- Spaces$spaces[[2]]$id Folders <- cu_get_folders(space_id) str(Folders, 3) #> List of 1 #>  $ folders:List of 1 #>   ..$ :List of 11 #>   .. ..$ id               : chr \"12783555\" #>   .. ..$ name             : chr \"Bug queues\" #>   .. ..$ orderindex       : int 1 #>   .. ..$ override_statuses: logi TRUE #>   .. ..$ hidden           : logi FALSE #>   .. ..$ space            :List of 2 #>   .. ..$ task_count       : chr \"10\" #>   .. ..$ archived         : logi FALSE #>   .. ..$ statuses         :List of 13 #>   .. ..$ lists            :List of 2 #>   .. ..$ permission_level : chr \"create\" folder_id <- Folders$folders[[1]]$id Lists <- cu_get_lists(folder_id) str(Lists, 3) #> List of 1 #>  $ lists:List of 2 #>   ..$ :List of 14 #>   .. ..$ id               : chr \"31538033\" #>   .. ..$ name             : chr \"Hotfix\" #>   .. ..$ orderindex       : int 2 #>   .. ..$ status           : NULL #>   .. ..$ priority         : NULL #>   .. ..$ assignee         : NULL #>   .. ..$ task_count       : int 5 #>   .. ..$ due_date         : NULL #>   .. ..$ start_date       : NULL #>   .. ..$ folder           :List of 4 #>   .. ..$ space            :List of 3 #>   .. ..$ archived         : logi FALSE #>   .. ..$ override_statuses: logi FALSE #>   .. ..$ permission_level : chr \"create\" #>   ..$ :List of 14 #>   .. ..$ id               : chr \"31538032\" #>   .. ..$ name             : chr \"Internal Bugs\" #>   .. ..$ orderindex       : int 3 #>   .. ..$ status           : NULL #>   .. ..$ priority         : NULL #>   .. ..$ assignee         : NULL #>   .. ..$ task_count       : int 5 #>   .. ..$ due_date         : NULL #>   .. ..$ start_date       : NULL #>   .. ..$ folder           :List of 4 #>   .. ..$ space            :List of 3 #>   .. ..$ archived         : logi FALSE #>   .. ..$ override_statuses: logi FALSE #>   .. ..$ permission_level : chr \"create\"  cu_get_lists_folderless(space_id) #> $lists #> list() str(cu_get_lists(folder_id, archived=TRUE), 3) #> List of 1 #>  $ lists:List of 1 #>   ..$ :List of 14 #>   .. ..$ id               : chr \"31538034\" #>   .. ..$ name             : chr \"Backlog\" #>   .. ..$ orderindex       : int 4 #>   .. ..$ status           : NULL #>   .. ..$ priority         : NULL #>   .. ..$ assignee         : NULL #>   .. ..$ task_count       : int 5 #>   .. ..$ due_date         : NULL #>   .. ..$ start_date       : NULL #>   .. ..$ folder           :List of 4 #>   .. ..$ space            :List of 3 #>   .. ..$ archived         : logi TRUE #>   .. ..$ override_statuses: logi FALSE #>   .. ..$ permission_level : chr \"create\""},{"path":"/index.html","id":"tasks","dir":"","previous_headings":"Examples","what":"Tasks","title":"Interacting with the ClickUp v2 API from R","text":"can list Tasks within specific List defined list_id Notice 5 tasks list. can include Subtasks Getting tasks (possibly filtered) Workspace done via cu_get_filtered_team_tasks function. function returns tasks batches 100. don’t want deal paging, use wrapper function cu_get_all_team_tasks list tasks returned include closed tasks, get well need pass include_closed query parameter Let’s inspect first elements Task object Dates given Unix time (milliseconds), cu_date_from cu_date_to convert back forth single task can accessed task ID (note: copying task ID ClickUp GUI prepend task ID hash, \"#8ckjp5\", API expects ID without hash \"8ckjp5\"). Use cu_task_id function get rid leading hash (API call use function normalize task IDs). $parent property NULL Tasks, contains parent Task ID Subtasks Dependencies stored $dependencies property","code":"list_id <- Lists$lists[[1]]$id Tasks <- cu_get_tasks(list_id) str(Tasks, 2) #> List of 1 #>  $ tasks:List of 5 #>   ..$ :List of 32 #>   ..$ :List of 32 #>   ..$ :List of 32 #>   ..$ :List of 32 #>   ..$ :List of 32 subTasks <- cu_get_tasks(list_id, subtasks=TRUE) length(subTasks$tasks) #> [1] 7 ## without closed tasks length(cu_get_all_team_tasks(team_id, subtasks=TRUE)$tasks) #> [1] 17  ## with closed tasks allSubTasks <- cu_get_all_team_tasks(team_id, subtasks=TRUE,                                 include_closed=TRUE) length(allSubTasks$tasks) #> [1] 18  Status <- sapply(allSubTasks$tasks, function(z) z$status$status) data.frame(table(Status)) #>          Status Freq #> 1        Closed    1 #> 2   in progress    3 #> 3 investigating    2 #> 4          Open    5 #> 5    production    1 #> 6        review    4 #> 7        staged    2 str(Tasks$tasks[[1]][1:10]) #> List of 10 #>  $ id          : chr \"8ckc8h\" #>  $ custom_id   : NULL #>  $ name        : chr \"Slow speed report\" #>  $ text_content: NULL #>  $ description : NULL #>  $ status      :List of 4 #>   ..$ status    : chr \"investigating\" #>   ..$ color     : chr \"#ff1010\" #>   ..$ type      : chr \"custom\" #>   ..$ orderindex: int 2 #>  $ orderindex  : chr \"6.00000000000000000000000000000000\" #>  $ date_created: chr \"1592452913384\" #>  $ date_updated: chr \"1592452913384\" #>  $ date_closed : NULL Tasks$tasks[[1]]$date_created #> [1] \"1592452913384\" cu_date_from(Tasks$tasks[[1]]$date_created) #> [1] \"2020-06-17 22:01:53 MDT\" cu_date_to(cu_date_from(Tasks$tasks[[1]]$date_created)) #> [1] \"1592452913384\" x1 <- cu_get_task(cu_task_id(\"#8ckjp5\")) # task x1$parent #> NULL  x2 <- cu_get_task(\"8ckjru\") # subtask x2$parent #> [1] \"8ckjp5\" str(x1$dependencies) #> List of 1 #>  $ :List of 5 #>   ..$ task_id     : chr \"8ckjp5\" #>   ..$ depends_on  : chr \"8ckjpg\" #>   ..$ type        : int 1 #>   ..$ date_created: chr \"1592458378628\" #>   ..$ userid      : chr \"4300475\""},{"path":"/index.html","id":"helper-functions","dir":"","previous_headings":"Examples","what":"Helper functions","title":"Interacting with the ClickUp v2 API from R","text":"cu_options stores API settings cu_response allows inspecting response object Check rate limits remaining requests (rate limited minute)","code":"str(cu_options()) #> List of 4 #>  $ baseurl  : chr \"https://api.clickup.com\" #>  $ version  : chr \"v2\" #>  $ tz       : chr \"\" #>  $ useragent: chr \"http://github.com/psolymos/clickrup\" cu_response(Teams) #> Response [https://api.clickup.com/api/v2/team] #>   Date: 2021-12-13 05:23 #>   Status: 200 #>   Content-Type: application/json; charset=utf-8 #>   Size: 814 B cu_ratelimit(subTasks) #> $limit #> [1] 100 #>  #> $remaining #> [1] 92"},{"path":"/index.html","id":"formatting-the-request-body","dir":"","previous_headings":"Examples","what":"Formatting the request body","title":"Interacting with the ClickUp v2 API from R","text":"PUSH PUT requests often require send data part request body. Check API examples use () API expects array part body. example passing data cu_create_task, assignees array assignees’ userids added. Adding single userid without () drop brackets, list(name = \"New Task Name\", assignees = (183)) result expected JSON object: { \"name\": \"New Task Name\", \"assignees\": [183] }.","code":""},{"path":"/index.html","id":"attachments","dir":"","previous_headings":"Examples","what":"Attachments","title":"Interacting with the ClickUp v2 API from R","text":"can upload files attachments tasks:","code":"f <- file.path(tempdir(), \"example.png\")  png(f) hist(rnorm(10^6), col=2, main=\"Example\") dev.off()  cu_post_task_attachment(\"8ach57\", f)  unlink(f) # delete file"},{"path":"/index.html","id":"issues","dir":"","previous_headings":"","what":"Issues","title":"Interacting with the ClickUp v2 API from R","text":"https://github.com/psolymos/clickrup/issues","code":""},{"path":"/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Interacting with the ClickUp v2 API from R","text":"MIT © 2020 Peter Solymos","code":""},{"path":"/reference/api-attachment.html","id":null,"dir":"Reference","previous_headings":"","what":"Attachments — api-attachment","title":"Attachments — api-attachment","text":"Result call API endpoint POST https://api.clickup.com/api/v2/task/task_id/attachment","code":""},{"path":"/reference/api-attachment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Attachments — api-attachment","text":"","code":"cu_post_task_attachment(   task_id,   attachment,   filename = NULL,   ...,   cu_token = NULL )"},{"path":"/reference/api-attachment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Attachments — api-attachment","text":"task_id Task ID. attachment Path file. filename File name show CluckUp, deduced attachment provided (NULL). ... Can used pass mime type argument httr::upload_file(), mime type guessed otherwise. cu_token ClickUp personal access token access token OAuth flow. CU_PAT environment variable used NULL.","code":""},{"path":"/reference/api-attachment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Attachments — api-attachment","text":"cu object.","code":""},{"path":[]},{"path":"/reference/api-attachment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Attachments — api-attachment","text":"","code":"if (FALSE) { ## produce a png image f <- tempfile(fileext=\".png\") png(f) plot(1:10, col=1:10) dev.off()  ## attache the image to a task cu_post_task_attachment(\"8ach57\", f)  unlink(f) # clean up the image }"},{"path":"/reference/api-authorization.html","id":null,"dir":"Reference","previous_headings":"","what":"Authorization — api-authorization","title":"Authorization — api-authorization","text":"routes authing API going OAuth flow. Applications utilizing personal API token need functions.","code":""},{"path":"/reference/api-authorization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Authorization — api-authorization","text":"","code":"cu_get_access_token(client_id, client_secret, code, cu_token = NULL)  cu_get_authorized_user(cu_token = NULL)  cu_get_authorized_teams(cu_token = NULL)"},{"path":"/reference/api-authorization.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Authorization — api-authorization","text":"client_id Oauth app client id. client_secret Oauth app client secret. code Code given redirect URL. cu_token ClickUp personal access token access token OAuth flow. CU_PAT environment variable used NULL.","code":""},{"path":"/reference/api-authorization.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Authorization — api-authorization","text":"cu object.","code":""},{"path":[]},{"path":"/reference/api-checklists.html","id":null,"dir":"Reference","previous_headings":"","what":"Task checklists — api-checklists","title":"Task checklists — api-checklists","text":"Working checklists ClickUp tasks.","code":""},{"path":"/reference/api-checklists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Task checklists — api-checklists","text":"","code":"cu_create_checklist(task_id, name, cu_token = NULL)  cu_edit_checklist(checklist_id, position, cu_token = NULL)  cu_delete_checklist(checklist_id, cu_token = NULL)  cu_create_checklist_item(checklist_id, name, ..., cu_token = NULL)  cu_edit_checklist_item(checklist_id, checklist_item_id, ..., cu_token = NULL)  cu_delete_checklist_item(checklist_id, checklist_item_id, cu_token = NULL)"},{"path":"/reference/api-checklists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Task checklists — api-checklists","text":"task_id Task ID. name Checklist checlist item name. cu_token ClickUp personal access token access token OAuth flow. CU_PAT environment variable used NULL. checklist_id Checklist ID. position Position zero-based index order want checklist exist task. want checklist first position, pass 0. ... Named arguments passed API request body, see ClickUp API documentation (https://clickup.com/api). checklist_item_id Checklist item ID.","code":""},{"path":"/reference/api-checklists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Task checklists — api-checklists","text":"cu object.","code":""},{"path":[]},{"path":"/reference/api-checklists.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Task checklists — api-checklists","text":"","code":"if (FALSE) { ## create new checklist cl <- cu_create_checklist(\"8ach57\", \"New checklist\")  ## change position of checklist cu_edit_checklist(cl$checklist$id, position = 0)  ## create checklist items cli <- cu_create_checklist_item(cl$checklist$id, name=\"New item 1\") cli <- cu_create_checklist_item(cl$checklist$id, name=\"New item 2\",     assignee = 4471793) cli <- cu_create_checklist_item(cl$checklist$id, name=\"New item 3\",      assignee = NA, resolved = TRUE, parent = NA)  ## delete checklist items cu_delete_checklist_item(cli$checklist$id,      cli$checklist$items[[1]]$id)  ## delete checklist cu_delete_checklist(cli$checklist$id) }"},{"path":"/reference/api-comments.html","id":null,"dir":"Reference","previous_headings":"","what":"Comments — api-comments","title":"Comments — api-comments","text":"Working comments ClickUp tasks.","code":""},{"path":"/reference/api-comments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Comments — api-comments","text":"","code":"cu_post_task_comment(task_id, ..., cu_token = NULL)  cu_post_view_comment(view_id, ..., cu_token = NULL)  cu_post_list_comment(list_id, ..., cu_token = NULL)  cu_get_task_comments(task_id, cu_token = NULL)  cu_get_view_comments(view_id, cu_token = NULL)  cu_get_list_comments(list_id, cu_token = NULL)  cu_put_update_comment(comment_id, ..., cu_token = NULL)  cu_delete_comment(comment_id, cu_token = NULL)"},{"path":"/reference/api-comments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Comments — api-comments","text":"task_id Task ID. ... Named arguments passed API request body, see ClickUp API documentation (https://clickup.com/api). cu_token ClickUp personal access token access token OAuth flow. CU_PAT environment variable used NULL. view_id View ID. list_id List ID. comment_id Comment ID.","code":""},{"path":"/reference/api-comments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Comments — api-comments","text":"cu object.","code":""},{"path":[]},{"path":"/reference/api-customfields.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom fields — api-customfields","title":"Custom fields — api-customfields","text":"Working custom fields ClickUp tasks.","code":""},{"path":"/reference/api-customfields.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom fields — api-customfields","text":"","code":"cu_get_accessible_custom_fields(list_id, cu_token = NULL)  cu_set_custom_field_value(task_id, field_id, ..., cu_token = NULL)  cu_remove_field_value(task_id, field_id, cu_token = NULL)"},{"path":"/reference/api-customfields.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom fields — api-customfields","text":"list_id List ID. cu_token ClickUp personal access token access token OAuth flow. CU_PAT environment variable used NULL. task_id Task ID. field_id Field ID. ... Named arguments passed API request body. accessible fields can found task object cu_get_task() route. can retrieve field_id. see ClickUp API documentation (https://clickup.com/api).","code":""},{"path":"/reference/api-customfields.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Custom fields — api-customfields","text":"cu object.","code":""},{"path":[]},{"path":"/reference/api-dependencies.html","id":null,"dir":"Reference","previous_headings":"","what":"Task relationships — api-dependencies","title":"Task relationships — api-dependencies","text":"Working dependencies xyz ClickUp tasks (https://clickup.com/api).","code":""},{"path":"/reference/api-dependencies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Task relationships — api-dependencies","text":"","code":"cu_add_dependency(task_id, depends_on, dependency_of, cu_token = NULL)  cu_delete_dependency(task_id, depends_on, dependency_of, cu_token = NULL)  cu_add_task_link(task_id, links_to, cu_token = NULL)  cu_delete_task_link(task_id, links_to, cu_token = NULL)"},{"path":"/reference/api-dependencies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Task relationships — api-dependencies","text":"task_id Task ID. depends_on waiting dependency task. One one depends_on dependency_of must passed. dependency_of blocking dependency task. One one depends_on dependency_of must passed. cu_token ClickUp personal access token access token OAuth flow. CU_PAT environment variable used NULL. links_to Link another task.","code":""},{"path":"/reference/api-dependencies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Task relationships — api-dependencies","text":"cu object.","code":""},{"path":[]},{"path":"/reference/api-folders.html","id":null,"dir":"Reference","previous_headings":"","what":"Folders — api-folders","title":"Folders — api-folders","text":"Working folders ClickUp tasks (https://clickup.com/api).","code":""},{"path":"/reference/api-folders.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Folders — api-folders","text":"","code":"cu_create_folder(space_id, name, cu_token = NULL)  cu_update_folder(folder_id, name, cu_token = NULL)  cu_delete_folder(folder_id, name, cu_token = NULL)  cu_get_folders(space_id, archived = FALSE, cu_token = NULL)  cu_get_folder(folder_id, cu_token = NULL)"},{"path":"/reference/api-folders.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Folders — api-folders","text":"space_id Space ID. name Name folder. cu_token ClickUp personal access token access token OAuth flow. CU_PAT environment variable used NULL. folder_id Folder ID. archived Logical, return archived (TRUE) folders.","code":""},{"path":"/reference/api-folders.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Folders — api-folders","text":"cu object.","code":""},{"path":[]},{"path":"/reference/api-goals.html","id":null,"dir":"Reference","previous_headings":"","what":"Goals — api-goals","title":"Goals — api-goals","text":"Working goals ClickUp tasks.","code":""},{"path":"/reference/api-goals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Goals — api-goals","text":"","code":"cu_create_goal(team_id, ..., cu_token = NULL)  cu_update_goal(goal_id, ..., cu_token = NULL)  cu_delete_goal(goal_id, cu_token = NULL)  cu_get_goals(team_id, cu_token = NULL)  cu_get_goal(goal_id, cu_token = NULL)  cu_create_key_result(goal_id, ..., cu_token = NULL)  cu_edit_key_result(key_result_id, ..., cu_token = NULL)  cu_delete_key_result(key_result_id, cu_token = NULL)"},{"path":"/reference/api-goals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Goals — api-goals","text":"team_id Team ID. ... Named arguments passed API request body, see ClickUp API documentation (https://clickup.com/api). cu_token ClickUp personal access token access token OAuth flow. CU_PAT environment variable used NULL. goal_id Goal ID. key_result_id Key result ID.","code":""},{"path":"/reference/api-goals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Goals — api-goals","text":"cu object.","code":""},{"path":[]},{"path":"/reference/api-guests.html","id":null,"dir":"Reference","previous_headings":"","what":"Guests — api-guests","title":"Guests — api-guests","text":"Working guests ClickUp tasks (Enterprise feature).","code":""},{"path":"/reference/api-guests.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Guests — api-guests","text":"","code":"cu_invite_guest_to_workspace(team_id, cu_token = NULL)  cu_edit_guest_on_workspace(team_id, guest_id, ..., cu_token = NULL)  cu_remove_guest_from_workspace(team_id, guest_id, cu_token = NULL)  cu_get_guest(team_id, guest_id, cu_token = NULL)  cu_add_guest_to_task(   task_id,   guest_id,   permission_level = \"read\",   cu_token = NULL )  cu_remove_guest_from_task(task_id, guest_id, cu_token = NULL)  cu_add_guest_to_list(   list_id,   guest_id,   permission_level = \"read\",   cu_token = NULL )  cu_remove_guest_from_list(list_id, guest_id, cu_token = NULL)  cu_add_guest_to_folder(   folder_id,   guest_id,   permission_level = \"read\",   cu_token = NULL )  cu_remove_guest_from_folder(folder_id, guest_id, cu_token = NULL)"},{"path":"/reference/api-guests.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Guests — api-guests","text":"team_id Team ID. cu_token ClickUp personal access token access token OAuth flow. CU_PAT environment variable used NULL. guest_id Guest ID. ... Named arguments passed API request body, see ClickUp API documentation (https://clickup.com/api). task_id Task ID. permission_level Permisson level can \"read\", \"comment\", \"edit\", \"create\". list_id List ID. folder_id Folder ID.","code":""},{"path":"/reference/api-guests.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Guests — api-guests","text":"cu object.","code":""},{"path":[]},{"path":"/reference/api-lists.html","id":null,"dir":"Reference","previous_headings":"","what":"Lists — api-lists","title":"Lists — api-lists","text":"Working lists ClickUp tasks.","code":""},{"path":"/reference/api-lists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lists — api-lists","text":"","code":"cu_create_list(folder_id, ..., cu_token = NULL)  cu_create_folderless_list(space_id, ..., cu_token = NULL)  cu_update_list(list_id, ..., cu_token = NULL)  cu_delete_list(list_id, ..., cu_token = NULL)  cu_get_lists(folder_id, archived = FALSE, cu_token = NULL)  cu_get_lists_folderless(space_id, archived = FALSE, cu_token = NULL)  cu_get_list(list_id, cu_token = NULL)"},{"path":"/reference/api-lists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lists — api-lists","text":"folder_id Folder ID. ... Named arguments passed API request body, see ClickUp API documentation (https://clickup.com/api). cu_token ClickUp personal access token access token OAuth flow. CU_PAT environment variable used NULL. space_id SPace ID. list_id List ID. archived Logical, return archived (TRUE) lists.","code":""},{"path":"/reference/api-lists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lists — api-lists","text":"cu object.","code":""},{"path":[]},{"path":"/reference/api-members.html","id":null,"dir":"Reference","previous_headings":"","what":"Members — api-members","title":"Members — api-members","text":"Working members ClickUp tasks (https://clickup.com/api).","code":""},{"path":"/reference/api-members.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Members — api-members","text":"","code":"cu_get_task_members(task_id, cu_token = NULL)  cu_get_list_members(list_id, cu_token = NULL)"},{"path":"/reference/api-members.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Members — api-members","text":"task_id Task ID. cu_token ClickUp personal access token access token OAuth flow. CU_PAT environment variable used NULL. list_id List ID.","code":""},{"path":"/reference/api-members.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Members — api-members","text":"cu object.","code":""},{"path":[]},{"path":"/reference/api-sharedhierarchy.html","id":null,"dir":"Reference","previous_headings":"","what":"Shared hierarchy — api-sharedhierarchy","title":"Shared hierarchy — api-sharedhierarchy","text":"Working shared hierarchy ClickUp tasks (https://clickup.com/api). Returns resources access access parent. example, access shared task, access parent list, come back request.","code":""},{"path":"/reference/api-sharedhierarchy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shared hierarchy — api-sharedhierarchy","text":"","code":"cu_get_shared(team_id, cu_token = NULL)"},{"path":"/reference/api-sharedhierarchy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shared hierarchy — api-sharedhierarchy","text":"team_id Team ID. cu_token ClickUp personal access token access token OAuth flow. CU_PAT environment variable used NULL.","code":""},{"path":"/reference/api-sharedhierarchy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shared hierarchy — api-sharedhierarchy","text":"cu object.","code":""},{"path":[]},{"path":"/reference/api-spaces.html","id":null,"dir":"Reference","previous_headings":"","what":"Spaces — api-spaces","title":"Spaces — api-spaces","text":"Working spaces ClickUp tasks.","code":""},{"path":"/reference/api-spaces.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spaces — api-spaces","text":"","code":"cu_create_space(team_id, name, ..., cu_token = NULL)  cu_update_space(space_id, ..., cu_token = NULL)  cu_delete_space(space_id, cu_token = NULL)  cu_get_spaces(team_id, archived = FALSE, cu_token = NULL)  cu_get_space(space_id, cu_token = NULL)"},{"path":"/reference/api-spaces.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spaces — api-spaces","text":"team_id Team ID. name Name space. ... Named arguments passed API request body, see ClickUp API documentation (https://clickup.com/api). cu_token ClickUp personal access token access token OAuth flow. CU_PAT environment variable used NULL. space_id Space ID. archived Logical, return archived (TRUE) spaces.","code":""},{"path":"/reference/api-spaces.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spaces — api-spaces","text":"cu object.","code":""},{"path":[]},{"path":"/reference/api-tags.html","id":null,"dir":"Reference","previous_headings":"","what":"Tags — api-tags","title":"Tags — api-tags","text":"Working tags ClickUp tasks.","code":""},{"path":"/reference/api-tags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tags — api-tags","text":"","code":"cu_get_space_tags(space_id, cu_token = NULL)  cu_create_space_tag(space_id, name, ..., cu_token = NULL)  cu_edit_space_tag(space_id, tag_name, cu_token = NULL)  cu_delete_space_tag(task_id, tag_name, cu_token = NULL)  cu_add_tag_to_task(task_id, tag_name, cu_token = NULL)  cu_delete_space_tag(task_id, tag_name, cu_token = NULL)"},{"path":"/reference/api-tags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tags — api-tags","text":"space_id Space ID. cu_token ClickUp personal access token access token OAuth flow. CU_PAT environment variable used NULL. name Tag name. ... Named arguments passed API request body, see ClickUp API documentation (https://clickup.com/api). tag_name Tag name. task_id Task ID.","code":""},{"path":"/reference/api-tags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tags — api-tags","text":"cu object.","code":""},{"path":[]},{"path":"/reference/api-tasks.html","id":null,"dir":"Reference","previous_headings":"","what":"Tasks — api-tasks","title":"Tasks — api-tasks","text":"Working tasks ClickUp tasks.","code":""},{"path":"/reference/api-tasks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tasks — api-tasks","text":"","code":"cu_create_task(list_id, ..., cu_token = NULL)  cu_update_task(task_id, ..., cu_token = NULL)  cu_delete_task(task_id, cu_token = NULL)  cu_get_tasks(list_id, archived = FALSE, ..., cu_token = NULL)  cu_get_task(task_id, cu_token = NULL)  cu_get_filtered_team_tasks(team_id, ..., cu_token = NULL)"},{"path":"/reference/api-tasks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tasks — api-tasks","text":"list_id List ID. ... Named arguments passed API request body, query parameters, see ClickUp API documentation (https://clickup.com/api). cu_token ClickUp personal access token access token OAuth flow. CU_PAT environment variable used NULL. task_id Task ID. ClickUp GUI prepends task IDs leading hash, cu_task_id() used internally normalize task IDs. archived Logical, return archived (TRUE) lists. team_id Team (workspace) ID.","code":""},{"path":"/reference/api-tasks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tasks — api-tasks","text":"cu object.","code":""},{"path":[]},{"path":"/reference/api-tasks.html","id":"create-task","dir":"Reference","previous_headings":"","what":"Create task","title":"Tasks — api-tasks","text":"assignees array assignees' userids added task. priority integer mapping 1 : Urgent, 2 : High, 3 : Normal, 4 : Low (cu_priority()). Time estimate milliseconds. See fields section see custom fields available list. notify_all true, creation notifications sent everyone including creator task. Instead content can pass markdown_content valid markdown syntax add formatting task description. Passing existing task ID parent property make new task subtask parent. parent pass must subtask , must part list pass URL params. links_to accepts task ID create linked dependency new task.","code":""},{"path":"/reference/api-tasks.html","id":"update-task","dir":"Reference","previous_headings":"","what":"Update task","title":"Tasks — api-tasks","text":"pass properties want update. unnecessary pass entire task object.","code":""},{"path":"/reference/api-tasks.html","id":"get-tasks","dir":"Reference","previous_headings":"","what":"Get tasks","title":"Tasks — api-tasks","text":"maximum number tasks returned response 100. paging request, check list limit length response determine last page. default include closed tasks. page tasks, pass page number wish fetch. cu_get_all_team_tasks() wrapper spare paging.","code":""},{"path":"/reference/api-tasks.html","id":"filter-query-parameters","dir":"Reference","previous_headings":"","what":"Filter query parameters","title":"Tasks — api-tasks","text":"value array, use () make sure atomic vectors remain JSON arrays output. archived: return archived tasks. page: page fetch (starts 0) order_by: order field, defaults created; options: id, created, updated, due_date. reverse: reverse order. subtasks: include subtasks, default false. space_ids: spaces query, array. project_ids: projects query, array. statuses: statuses query, array. include_closed: default, api include closed tasks. Set true send status filter include closed tasks. assignees: assignees query, array. due_date_gt: filter due date greater posix time. due_date_lt: filter due date less posix time. date_created_gt: filter date created greater posix time. date_created_lt: filter date created less posix time. date_updated_gt: filter date updated greater posix time. date_updated_lt: filter date updated less posix time custom_fields: filter custom fields. Must stringified JSON array objects. See custom fields section API docs details.","code":""},{"path":[]},{"path":"/reference/api-tasktemplates.html","id":null,"dir":"Reference","previous_headings":"","what":"Task templates — api-tasktemplates","title":"Task templates — api-tasktemplates","text":"Working task templates ClickUp tasks.","code":""},{"path":"/reference/api-tasktemplates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Task templates — api-tasktemplates","text":"","code":"cu_get_task_templates(team_id, page, cu_token = NULL)  cu_create_task_from_template(list_id, template_id, name, ..., cu_token = NULL)"},{"path":"/reference/api-tasktemplates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Task templates — api-tasktemplates","text":"team_id Team ID. page Page fetch (starts 0). page task templates, pass page number wish fetch. cu_token ClickUp personal access token access token OAuth flow. CU_PAT environment variable used NULL. list_id List ID. template_id Template ID. name Name task. ... Named arguments passed API request body, see ClickUp API documentation (https://clickup.com/api).","code":""},{"path":"/reference/api-tasktemplates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Task templates — api-tasktemplates","text":"cu object.","code":""},{"path":[]},{"path":"/reference/api-teams.html","id":null,"dir":"Reference","previous_headings":"","what":"Teams (workspaces) — api-teams","title":"Teams (workspaces) — api-teams","text":"Working teams (workspaces) ClickUp tasks (https://clickup.com/api). Teams legacy term now called workspaces ClickUp. compatablitly, term team still used API v2. new 'Teams' feature represents group users.","code":""},{"path":"/reference/api-teams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Teams (workspaces) — api-teams","text":"","code":"cu_get_teams(cu_token = NULL)"},{"path":"/reference/api-teams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Teams (workspaces) — api-teams","text":"cu_token ClickUp personal access token access token OAuth flow. CU_PAT environment variable used NULL.","code":""},{"path":"/reference/api-teams.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Teams (workspaces) — api-teams","text":"cu object.","code":""},{"path":[]},{"path":"/reference/api-teams.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Teams (workspaces) — api-teams","text":"","code":"if (FALSE) { cu_get_teams() }"},{"path":"/reference/api-timetracking-2.html","id":null,"dir":"Reference","previous_headings":"","what":"Time tracking 2.0 — api-timetracking-2","title":"Time tracking 2.0 — api-timetracking-2","text":"Working time tracking ClickUp tasks. Note: time entry negative duration means timer currently ongoing user.","code":""},{"path":"/reference/api-timetracking-2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Time tracking 2.0 — api-timetracking-2","text":"","code":"cu_get_time_entries_within_date_range(   team_id,   start_date,   end_date,   assignee,   cu_token = NULL )  cu_get_singular_time_entry(team_id, timer_id, cu_token = NULL)  cu_get_time_entry_history(team_id, timer_id, cu_token = NULL)  cu_get_running_time_entry(team_id, timer_id, cu_token = NULL)  cu_create_time_entry(team_id, ..., cu_token = NULL)  cu_remove_tags_from_time_entries(team_id, ..., cu_token = NULL)  cu_get_all_tags_from_time_entries(team_id, cu_token = NULL)  cu_add_tags_from_time_entries(team_id, ..., cu_token = NULL)  cu_change_tag_names_from_time_entries(team_id, ..., cu_token = NULL)  cu_start_time_entry(team_id, timer_id, ..., cu_token = NULL)  cu_stop_time_entry(team_id, cu_token = NULL)  cu_delete_time_entry(team_id, timer_id, cu_token = NULL)  cu_update_time_entry(team_id, timer_id, ..., cu_token = NULL)"},{"path":"/reference/api-timetracking-2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Time tracking 2.0 — api-timetracking-2","text":"team_id Team ID. start_date POSIX start time milliseconds. end_date POSIX end time milliseconds. assignee User ids filter separated commas. Note: Workspace Owners/Admins access . cu_token ClickUp personal access token access token OAuth flow. CU_PAT environment variable used NULL. timer_id Timer ID. ... Named arguments passed API request body, see ClickUp API documentation (https://clickup.com/api).","code":""},{"path":"/reference/api-timetracking-2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Time tracking 2.0 — api-timetracking-2","text":"cu object.","code":""},{"path":[]},{"path":"/reference/api-timetracking-legacy.html","id":null,"dir":"Reference","previous_headings":"","what":"Time tracking legacy — api-timetracking-legacy","title":"Time tracking legacy — api-timetracking-legacy","text":"Working time tracking ClickUp tasks. Note: legacy API time tracking. Please use new Time tracking API. able update timer entries uses Time Tracking 2.0 features uses labels, descriptions, making time entries billable.","code":""},{"path":"/reference/api-timetracking-legacy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Time tracking legacy — api-timetracking-legacy","text":"","code":"cu_track_time(task_id, ..., cu_token = NULL)  cu_get_tracked_time(task_id, cu_token = NULL)  cu_edit_time_tracked(task_id, interval_id, ..., cu_token = NULL)  cu_delete_time_tracked(task_id, interval_id, cu_token = NULL)"},{"path":"/reference/api-timetracking-legacy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Time tracking legacy — api-timetracking-legacy","text":"task_id Task ID. ... Named arguments passed API request body, see ClickUp API documentation (https://clickup.com/api). Edit start, end, total time time tracked entry. cu_token ClickUp personal access token access token OAuth flow. CU_PAT environment variable used NULL. interval_id Interval ID.","code":""},{"path":"/reference/api-timetracking-legacy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Time tracking legacy — api-timetracking-legacy","text":"cu object. Note: legacy API comes deprecation warning.","code":""},{"path":[]},{"path":"/reference/api-users.html","id":null,"dir":"Reference","previous_headings":"","what":"Users — api-users","title":"Users — api-users","text":"Working users ClickUp tasks (Enterprise feture).","code":""},{"path":"/reference/api-users.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Users — api-users","text":"","code":"cu_invite_user_to_workspace(   team_id,   email,   admin = FALSE,   ...,   cu_token = NULL )  cu_edit_user_on_workspace(   team_id,   user_id,   username,   admin = FALSE,   ...,   cu_token = NULL )  cu_remove_user_from_workspace(team_id, user_id, cu_token = NULL)  cu_get_user(team_id, user_id, cu_token = NULL)"},{"path":"/reference/api-users.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Users — api-users","text":"team_id Team (workspace) ID. email Email. admin Logical, admin account ... Named arguments passed API request body, see ClickUp API documentation (https://clickup.com/api). cu_token ClickUp personal access token access token OAuth flow. CU_PAT environment variable used NULL. user_id User ID. username User name.","code":""},{"path":"/reference/api-users.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Users — api-users","text":"cu object.","code":""},{"path":[]},{"path":"/reference/api-views.html","id":null,"dir":"Reference","previous_headings":"","what":"Views — api-views","title":"Views — api-views","text":"Working views ClickUp tasks.","code":""},{"path":"/reference/api-views.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Views — api-views","text":"","code":"cu_create_team_view(team_id, name, ..., cu_token = NULL)  cu_create_space_view(space_id, name, ..., cu_token = NULL)  cu_create_folder_view(folder_id, name, ..., cu_token = NULL)  cu_create_list_view(list_id, name, ..., cu_token = NULL)  cu_get_team_views(team_id, cu_token = NULL)  cu_get_space_views(space_id, cu_token = NULL)  cu_get_folder_views(folder_id, cu_token = NULL)  cu_get_list_views(list_id, cu_token = NULL)  cu_get_view(view_id, cu_token = NULL)  cu_get_view_tasks(view_id, page, cu_token = NULL)  cu_update_view(view_id, ..., cu_token = NULL)  cu_delete_view(view_id, cu_token = NULL)"},{"path":"/reference/api-views.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Views — api-views","text":"team_id Team (workspace) ID. name View name. ... Named arguments passed API request body, see ClickUp API documentation (https://clickup.com/api). cu_token ClickUp personal access token access token OAuth flow. CU_PAT environment variable used NULL. space_id Space ID. folder_id Folder ID. list_id List ID. view_id View ID. page Page fetch (starts 0).","code":""},{"path":"/reference/api-views.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Views — api-views","text":"cu object.","code":""},{"path":[]},{"path":"/reference/api-webhooks.html","id":null,"dir":"Reference","previous_headings":"","what":"Webhooks — api-webhooks","title":"Webhooks — api-webhooks","text":"Working webhooks ClickUp tasks.","code":""},{"path":"/reference/api-webhooks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Webhooks — api-webhooks","text":"","code":"cu_create_webhook(team_id, endpoint, events = \"*\", ..., cu_token = NULL)  cu_update_webhook(webhook_id, ..., cu_token = NULL)  cu_delete_webhook(webhook_id, cu_token = NULL)  cu_get_webhooks(team_id, cu_token = NULL)"},{"path":"/reference/api-webhooks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Webhooks — api-webhooks","text":"team_id Team ID. endpoint Webhook endpoint. events Events (see Details). ... Named arguments passed API request body, e.g. \"endpoint\", \"events\", \"status\", see ClickUp API documentation (https://clickup.com/api). cu_token ClickUp personal access token access token OAuth flow. CU_PAT environment variable used NULL. webhook_id Webhook ID.","code":""},{"path":"/reference/api-webhooks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Webhooks — api-webhooks","text":"cu object.","code":""},{"path":"/reference/api-webhooks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Webhooks — api-webhooks","text":"may filter location resources get sent webhook passing optional space_id, folder_id, list_id, task_id body request. Without specifying events, event types sent webhook. However, can filter specific actions sending events array. subscribe specific events, pass array events want subscribe , otherwise pass \"*\" subscribe everything. Events include: \"taskCreated\" \"taskUpdated\" \"taskDeleted\" \"listCreated\" \"listUpdated\" \"listDeleted\" \"folderCreated\" \"folderUpdated\" \"folderDeleted\" \"spaceCreated\" \"spaceUpdated\" \"spaceDeleted\" \"goalCreated\" \"goalUpdated\" \"goalDeleted\" \"keyResultCreated\" \"keyResultUpdated\" \"keyResultDeleted\".","code":""},{"path":[]},{"path":"/reference/cu-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for cu objects. — cu-class","title":"Methods for cu objects. — cu-class","text":"Calls ClickUp API return objects class cu. obejct list based parsed JSON response call. response stored attribute. Methods defined better printing coercion.","code":""},{"path":"/reference/cu-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Methods for cu objects. — cu-class","text":"","code":"# S3 method for cu as.list(x, ...)  # S3 method for cu print(x, ...)  # S3 method for cu str(object, ...)"},{"path":"/reference/cu-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Methods for cu objects. — cu-class","text":"x object class cu. ... optional arguments passed methods. object object class cu.","code":""},{"path":[]},{"path":"/reference/cu-date.html","id":null,"dir":"Reference","previous_headings":"","what":"Handling ClickUp date/time values. — cu-date","title":"Handling ClickUp date/time values. — cu-date","text":"cu_date_from turns ClickUp date/time format (Unix time milliseconds) POSIXct(). cu_date_to turns POSIXct coercible date/time value back Unix time.","code":""},{"path":"/reference/cu-date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handling ClickUp date/time values. — cu-date","text":"","code":"cu_date_from(ms, tz = NULL, ...)  cu_date_to(dt)"},{"path":"/reference/cu-date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handling ClickUp date/time values. — cu-date","text":"ms ClickUp date/time format, Unix time milliseconds. tz time zone, NULL defaults cu_options()$tz. ... optional arguments passed .POSIXct(). dt POSIXct coercible date/time value.","code":""},{"path":"/reference/cu-date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Handling ClickUp date/time values. — cu-date","text":"cu_date_from returns POSIXct(). cu_date_to returns Unix time character .","code":""},{"path":[]},{"path":"/reference/cu-date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Handling ClickUp date/time values. — cu-date","text":"","code":"if (FALSE) { task_id <- \"8ach57\" due_date <- as.POSIXct(\"2020-12-24 21:15:49 MDT\")  task <- cu_get_task(task_id) task$due_date  cu_date_to(due_date) task_up <- cu_update_task(\"8ach57\", due_date=cu_date_to(due_date))  cu_date_from(task_up$due_date) identical(cu_date_from(task_up$due_date), due_date) }"},{"path":"/reference/cu-get-all-team-tasks.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper function to get all tasks from a workspace — cu-get-all-team-tasks","title":"Wrapper function to get all tasks from a workspace — cu-get-all-team-tasks","text":"wrapper function uses cu_get_filtered_team_tasks() takes care paging.","code":""},{"path":"/reference/cu-get-all-team-tasks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper function to get all tasks from a workspace — cu-get-all-team-tasks","text":"","code":"cu_get_all_team_tasks(team_id, ...)"},{"path":"/reference/cu-get-all-team-tasks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper function to get all tasks from a workspace — cu-get-all-team-tasks","text":"team_id Team ID tasks. ... query parameters cu_get_filtered_team_tasks() except page (paging taken care ), e.g. include_closed include closed tasks.","code":""},{"path":"/reference/cu-get-all-team-tasks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper function to get all tasks from a workspace — cu-get-all-team-tasks","text":"list parsed JSON response. return object response attribute.","code":""},{"path":[]},{"path":"/reference/cu-options.html","id":null,"dir":"Reference","previous_headings":"","what":"Global options for the clickrup package — cu-options","title":"Global options for the clickrup package — cu-options","text":"Options store allow set global values ClickUp API clickrup functions.","code":""},{"path":"/reference/cu-options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Global options for the clickrup package — cu-options","text":"","code":"cu_options(...)"},{"path":"/reference/cu-options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Global options for the clickrup package — cu-options","text":"... Options set.","code":""},{"path":"/reference/cu-options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Global options for the clickrup package — cu-options","text":"parameters set cu_options, former values returned invisible named list. list can passed argument cu_options restore parameter values. Tags following: baseurl: ClickUp API base URL. version: ClickUp API version. tz: time zone. useragent: user agent.","code":""},{"path":"/reference/cu-options.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Global options for the clickrup package — cu-options","text":"Options mostly internal use allow API version changes future. tz (time zone) option can set globally cu_date_from(). default value \"\" means current time zone, see strptime().","code":""},{"path":"/reference/cu-options.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Global options for the clickrup package — cu-options","text":"","code":"str(cu_options()) #> List of 4 #>  $ baseurl  : chr \"https://api.clickup.com\" #>  $ version  : chr \"v2\" #>  $ tz       : chr \"\" #>  $ useragent: chr \"http://github.com/psolymos/clickrup\"  op <- cu_options(tz = \"GMT\") # save old values and set tz cu_options()$tz              # new tz value #> [1] \"GMT\" cu_options(op)               # reset cu_options()$tz              # default tz value #> [1] \"\""},{"path":"/reference/cu-pat.html","id":null,"dir":"Reference","previous_headings":"","what":"Managing ClickUp personal access token — cu-pat","title":"Managing ClickUp personal access token — cu-pat","text":"ClickUp API requires personal access token (PAT) sent API request. cu_set_pat function uses Sys.setenv set CU_PAT environment variable processes called within R future calls Sys.getenv R process. cu_get_pat used retrieve PAT API calls.","code":""},{"path":"/reference/cu-pat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Managing ClickUp personal access token — cu-pat","text":"","code":"cu_get_pat(token = NULL)  cu_set_pat(token)"},{"path":"/reference/cu-pat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Managing ClickUp personal access token — cu-pat","text":"token ClickUp personal access token access token OAuth flow. CU_PAT environment variable used NULL.","code":""},{"path":"/reference/cu-pat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Managing ClickUp personal access token — cu-pat","text":"cu_set_pat returns logical similarly Sys.setenv(). cu_get_pat returns ClickUp PAT look something like pk_4753994_EXP7MPOJ7XQM5UJDV2M45MPF0YHH5YHO. token NULL simply pass token value look CU_PAT environment variable.","code":""},{"path":"/reference/cu-pat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Managing ClickUp personal access token — cu-pat","text":"set ClickUp PAT, Follow tutorial: sign ClickUp (can use referral link , free), navigate personal Settings, click Apps left sidebar, click Generate create API token, click Copy copy token clipboard. Now add ClickUp token environment variable: open file .Renviron: file.edit(\"~/.Renviron\"), add line CU_PAT=\"your_token\" .Renviron file save , check Sys.getenv(\"CU_PAT\"), return token.","code":""},{"path":[]},{"path":"/reference/cu-priority.html","id":null,"dir":"Reference","previous_headings":"","what":"Turn ClickUp API priority scores to labels — cu-priority","title":"Turn ClickUp API priority scores to labels — cu-priority","text":"ClickUp API returns priority values integer scores. cu_priority function maps scores priority labels Urgent (1), High (2), Normal (3), Low (4).","code":""},{"path":"/reference/cu-priority.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Turn ClickUp API priority scores to labels — cu-priority","text":"","code":"cu_priority(score)"},{"path":"/reference/cu-priority.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Turn ClickUp API priority scores to labels — cu-priority","text":"score Character numeric values 1 4.","code":""},{"path":"/reference/cu-priority.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Turn ClickUp API priority scores to labels — cu-priority","text":"Returns character vector labels.","code":""},{"path":"/reference/cu-priority.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Turn ClickUp API priority scores to labels — cu-priority","text":"","code":"cu_priority(c(1, 2, 3, 4)) #> [1] \"Urgent\" \"High\"   \"Normal\" \"Low\""},{"path":"/reference/cu-ratelimit.html","id":null,"dir":"Reference","previous_headings":"","what":"ClickUp API rate limit — cu-ratelimit","title":"ClickUp API rate limit — cu-ratelimit","text":"ClickUp API rate limited per OAuth/PAT token. receive 429 HTTP status code exceed rate limit. According API description (https://clickup.com/api), rate limit 100 requests per minute per token subject change. time writing, limit 900/min/token.","code":""},{"path":"/reference/cu-ratelimit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ClickUp API rate limit — cu-ratelimit","text":"","code":"cu_ratelimit(x)"},{"path":"/reference/cu-ratelimit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ClickUp API rate limit — cu-ratelimit","text":"x cu object returned API call.","code":""},{"path":"/reference/cu-ratelimit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ClickUp API rate limit — cu-ratelimit","text":"Returns list following elements: limit: rate limit (per minute), remaining: remaining requests.","code":""},{"path":[]},{"path":"/reference/cu-ratelimit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ClickUp API rate limit — cu-ratelimit","text":"","code":"if (FALSE) { task <- cu_get_task(\"8ach57\") cu_ratelimit(task) }"},{"path":"/reference/cu-response.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracts the response attribute — cu-response","title":"Extracts the response attribute — cu-response","text":"function extracts response attribute cu object ClickUp API call.","code":""},{"path":"/reference/cu-response.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracts the response attribute — cu-response","text":"","code":"cu_response(x)"},{"path":"/reference/cu-response.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracts the response attribute — cu-response","text":"x object class cu.","code":""},{"path":"/reference/cu-response.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extracts the response attribute — cu-response","text":"response object returned httr::response(). calls existing API endpoints return response attribute. Wrapper functions make multiple calls endpoints (e.g. due paging etc.) store responses return NULL.","code":""},{"path":[]},{"path":"/reference/cu-response.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extracts the response attribute — cu-response","text":"","code":"if (FALSE) { task <- cu_get_task(\"8ach57\") cu_response(task) }"},{"path":"/reference/cu-role.html","id":null,"dir":"Reference","previous_headings":"","what":"Turn ClickUp API role to meaningful label — cu-role","title":"Turn ClickUp API role to meaningful label — cu-role","text":"ClickUp API returns role integer. cu_role function maps scores priority labels Owner (1), Admin (2), Member (3), Guest (4).","code":""},{"path":"/reference/cu-role.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Turn ClickUp API role to meaningful label — cu-role","text":"","code":"cu_role(role)"},{"path":"/reference/cu-role.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Turn ClickUp API role to meaningful label — cu-role","text":"role Character numeric values 1 4.","code":""},{"path":"/reference/cu-role.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Turn ClickUp API role to meaningful label — cu-role","text":"Returns character vector labels.","code":""},{"path":"/reference/cu-role.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Turn ClickUp API role to meaningful label — cu-role","text":"","code":"cu_role(c(1, 2, 3, 4)) #> [1] \"Owner\"  \"Admin\"  \"Member\" \"Guest\""},{"path":"/reference/cu-task-id.html","id":null,"dir":"Reference","previous_headings":"","what":"Handling task IDs — cu-task-id","title":"Handling task IDs — cu-task-id","text":"Task IDs prepended hash copied ClickUp GUI. function checks removes leading hash.","code":""},{"path":"/reference/cu-task-id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handling task IDs — cu-task-id","text":"","code":"cu_task_id(task_id)"},{"path":"/reference/cu-task-id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handling task IDs — cu-task-id","text":"task_id Task ID without leading hash.","code":""},{"path":"/reference/cu-task-id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Handling task IDs — cu-task-id","text":"Returns task ID character without leading hash used API.","code":""},{"path":"/reference/cu-task-id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Handling task IDs — cu-task-id","text":"","code":"cu_task_id(\"#7ygh8h\") #> [1] \"7ygh8h\" cu_task_id(\"7ygh8h\") #> [1] \"7ygh8h\""},{"path":"/news/index.html","id":"version-005","dir":"Changelog","previous_headings":"","what":"Version 0.0.5","title":"Version 0.0.5","text":"Internal function .cu_get() supports paging (#12 @krlmlr).","code":""},{"path":"/news/index.html","id":"version-004","dir":"Changelog","previous_headings":"","what":"Version 0.0.4","title":"Version 0.0.4","text":"Make options available load (#10 @krlmlr). Retry rate limits hit (#8 @krlmlr). Better error handling (#7 @krlmlr). @krlmlr added package author.","code":""},{"path":"/news/index.html","id":"version-003","dir":"Changelog","previous_headings":"","what":"Version 0.0.3","title":"Version 0.0.3","text":"Added Time Tracking 2.0 / Get time entry history endpoint.","code":""},{"path":"/news/index.html","id":"version-002","dir":"Changelog","previous_headings":"","what":"Version 0.0.2","title":"Version 0.0.2","text":"Added Time Tracking 2.0 API deprecation warning Time Tracking Legacy API (#3).","code":""},{"path":"/news/index.html","id":"version-001","dir":"Changelog","previous_headings":"","what":"Version 0.0.1","title":"Version 0.0.1","text":"Added ClickUp v2 API endpoints (see initial roadmap: #1).","code":""}]
